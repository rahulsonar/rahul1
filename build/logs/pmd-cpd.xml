<?xml version="1.0" encoding="UTF-8"?>
<pmd-cpd>
  <duplication lines="70" tokens="118">
    <file path="/var/www/html/icc-bod/wp-content/plugins/iccbod/AdminListLibraryDocuments.php" line="171"/>
    <file path="/var/www/html/icc-bod/wp-content/plugins/iccbod/AdminListMeetingCategory.php" line="168"/>
    <codefragment>            $order = (!empty($_REQUEST['order'])) ? $_REQUEST['order'] : 'asc'; //If no order, default to asc&#13;
            $result = strcmp($a[$orderby], $b[$orderby]); //Determine sort order&#13;
            return ($order === 'asc') ? $result : -$result; //Send final sort direction to usort&#13;
        }&#13;
&#13;
        usort($data, 'usort_reorder');&#13;
        $current_page = $this-&gt;get_pagenum();&#13;
        $total_items = count($data);&#13;
        $data = array_slice($data, (($current_page - 1) * $per_page), $per_page);&#13;
        $this-&gt;items = $data;&#13;
        $this-&gt;set_pagination_args(array(&#13;
            'total_items' =&gt; $total_items, //WE have to calculate the total number of items&#13;
            'per_page' =&gt; $per_page, //WE have to determine how many items to show on a page&#13;
            'total_pages' =&gt; ceil($total_items / $per_page)   //WE have to calculate the total number of pages&#13;
        ));&#13;
    }&#13;
&#13;
    /**&#13;
     * Adding custom filter for filtering results&#13;
     */&#13;
    public function extra_tablenav($which) {&#13;
        global $wpdb;&#13;
        $move_on_url = '&amp;status-filter=';&#13;
        if ($which == "top") {&#13;
            ?&gt;&#13;
            &lt;div class="alignleft actions bulkactions"&gt;&lt;label class='admin_custom_filter_label'&gt;Status&lt;/label&gt;&lt;/div&gt;&#13;
            &lt;div class="alignleft actions bulkactions"&gt;&#13;
                &lt;?php&#13;
                $cats = array(&#13;
                    array(&#13;
                        'id' =&gt; 1,&#13;
                        'title' =&gt; 'Deleted'&#13;
                    ),&#13;
                    array(&#13;
                        'id' =&gt; 0,&#13;
                        'title' =&gt; 'Published'&#13;
                    )&#13;
                );&#13;
                if ($cats) {&#13;
                    ?&gt;&#13;
                    &lt;select name="status-filter" class="ewc-filter-cat"&gt;&#13;
                        &lt;?php&#13;
                        foreach ($cats as $cat) {&#13;
                            $selected = '';&#13;
                            if ($_GET['status-filter'] == $cat['id']) {&#13;
                                $selected = ' selected = "selected"';&#13;
                            }&#13;
                            ?&gt;&#13;
                            &lt;option value="&lt;?php echo $cat['id']; ?&gt;" &lt;?php echo $selected; ?&gt;&gt;&lt;?php echo $cat['title']; ?&gt;&lt;/option&gt;&#13;
                            &lt;?php&#13;
                        }&#13;
                        ?&gt;&#13;
                        &lt;option value='' selected="selected"&gt;All&lt;/option&gt;&#13;
                    &lt;/select&gt;&#13;
&#13;
                    &lt;?php&#13;
                    submit_button(__('Filter'), 'button', 'filter_action', false, array('id' =&gt; 'post-query-submit'));&#13;
                }&#13;
                ?&gt;  &#13;
            &lt;/div&gt;&#13;
            &lt;?php&#13;
        }&#13;
    }&#13;
&#13;
}&#13;
&#13;
/**&#13;
 * Register admin menu pages&#13;
 */&#13;
function document_category_menu_items() {&#13;
</codefragment>
  </duplication>
  <duplication lines="120" tokens="254">
    <file path="/var/www/html/icc-bod/wp-content/plugins/iccbod/models/Meeting.php" line="161"/>
    <file path="/var/www/html/icc-bod/wp-content/plugins/iccbod/models/Meeting.php" line="431"/>
    <codefragment>            if (isset($_FILES['meet_image']) &amp;&amp; $_FILES['meet_image']['size'] != 0) {

                // Proceed with file upload and checks
                $file = $_FILES['meet_image'];

                $filearrays = array();
                $upload_dir = wp_upload_dir();
                $upload_dir = $upload_dir['path'] . "/";
                $max_size = 5242880; // max file size: 10 MB
                $allow_override = FALSE; // allow uploading files overriding existing ones
                $valid_exts = array(// allowed extensions
                    'jpg',
                    'jpeg',
                    'png'
                );
                $valid_types = array(
                    'image/jpeg',
                    'image/jpeg',
                    'image/png'
                );
                $count = 0;

                $fileuploaded = 0;

                if (isset($file['name']) &amp;&amp; !empty($file['name'])) {

                    // get extension
                    $extension = pathinfo($file['name'], PATHINFO_EXTENSION);

                    // make sure extension and type are not empty
                    if (!(strlen($extension) &amp;&amp; strlen($file['type']))) {
                        $r[0] = 'false';
                        $r[1] = 'File extension Not Found ' . $file['name'];
                        echo json_encode($r);
                        exit();
                        die();
                    } else {

                        // make sure extension and type are allowed
                        if (!(in_array($file['type'], $valid_types) &amp;&amp; in_array($extension, $valid_exts))) {
                            $msg = "Extension '$extension' or file type '$file[type]' is not permitted ";

                            $r[0] = 'false';
                            $r[1] = $msg . $file['name'];
                            echo json_encode($r);
                            exit();
                            die();
                        } else {

                            // make sure file is not empty
                            if (!$file['size']) {
                                $r[0] = 'false';
                                $r[1] = 'Empty File Uploaded.' . $file['name'];
                                echo json_encode($r);
                                exit();
                                die();
                            } else {

                                // make sure file is not too large
                                if ($file['size'] &gt; $max_size) {
                                    $msg = 'Uploaded File Is too large' . '(' . ceil($file['size'] / 1024) . 'kB &gt; ' . floor($max_size / 1024) . 'kB) ';
                                    $r[0] = 'false';
                                    $r[1] = $msg . $file['name'];
                                    echo json_encode($r);
                                    exit();
                                    die();
                                } else {

                                    // no other errors
                                    if ($file['error'] &gt; 0) {
                                        $msg = 'Unknown File Upload Error' . "(Code: $file[error]) ";

                                        $r[0] = 'false';
                                        $r[1] = $msg . $file['name'];
                                        echo json_encode($r);
                                        exit();
                                        die();
                                    }


                                    //create random name for file for upload
                                    $randomy = IccBodHelper::randString(10);
                                    $newname = $randomy . "." . $extension;
                                    $target = $upload_dir . $newname;
                                    $filearrays['file'] = $file;
                                    $filearrays['randname'] = $newname;
                                    $filearrays['target'] = $target;

                                    // make sure files don't override
                                    if (!$allow_override &amp;&amp; file_exists($target)) {
                                        $randomy = IccBodHelper::randString(10);
                                        $newname = $randomy . "." . $extension;
                                        $target = $upload_dir . $newname;
                                        $filearrays['target'] = $target;
                                    } else {

                                        //Set upload file flag is set to true
                                        $fileuploaded = 1;
                                    }
                                }
                            }
                        }
                    }
                } else {
                    //invalid file name
                    $r[0] = 'false';
                    $r[1] = 'Empty File Uploaded.' . $file['name'];
                    echo json_encode($r);
                    exit();
                    die();
                }

                if ($fileuploaded) {

                    if (!move_uploaded_file($filearrays['file']['tmp_name'], $filearrays['target'])) { // attempt uploading
                        $r[0] = 'false';
                        $r[1] = 'Uploading File Failed' . $filearrays['file']['name'];
                        echo json_encode($r);
                        exit();
                        die();
</codefragment>
  </duplication>
</pmd-cpd>
